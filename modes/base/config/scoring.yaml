#config_version=5

accruals:
  bonusAllow:
    events:
      - shotGroupToplanes_lit_complete
      - drop_target_bank_leftfull_down
      - drop_target_bank_rightfull_down
      - gravityAssistBonus
    events_when_complete: bonus_reset_achieved
    reset_on_complete: true
    disable_on_complete: false
  enableWizard:
    persist_state: true
    events:
      - acheivement_story01_successful
      - acheivement_story02_successful
      - acheivement_story03_successful
      - acheivement_story04_successful
      - acheivement_story05_successful
      - acheivement_story06_successful
    events_when_complete: enableWizardMode

counters:
  spinPop:
    enable_events: mode_base_started
    count_events: s_spinner_active, s_jet_upper_left_active, s_jet_upper_right_active:, s_jet_lower_center_active
    starting_count: 50
    count_complete_value: 0
    direction: down
    events_when_complete: gravityAssistBonus
    reset_on_complete: true
    disable_on_complete: false
    multiple_hit_window: 10ms

event_player:
  mode_base_started{ball==1 and is_extra_ball==0}:
    - first_ball_for_current_player
  do_scoop_notify:
    invoke_notify_by_event:
       new_value: "ACTIVE"
       new_text: "SCOOP\nSHOT"
  player_bonustype1{value>1}:
    - playfield_triple_start
  player_bonustype2{value>1}:
    - playfield_double_start
  player_bonustype3{value>1}:
    - playfield_double_start


# 10 Second INSANE SPINNER mode for finishing modes that end in the scoop shot
  acheivement_story01_successful:
    - trigger_insane_spins
  acheivement_story02_successful:
    - trigger_insane_spins
  acheivement_story04_successful:
    - trigger_insane_spins
  acheivement_story07_successful:
    - trigger_insane_spins


variable_player:
# --- *** GAME VARIABLES ***
# -- Persistent Playfield Multiplier
  mode_base_started{ball==1 and is_extra_ball==0}:
    perm_playfield_x:
       action: set
       int: 1
    outlane_rescue_value:
       action: set
       int: 100000
    outlane_sacrifice_value:
       action: set
       int: 100000
    pds:
       int: 100
       action: set
# -- Slings Count
    sling_hits:
       int: 0
       action: set
# -- Generic Switch Count
    other_switches:
       int: 0
       action: set
# -- Gravity Assist - Scoops
    gravassistTarget:
       int: 4
       action: set
    gravassist:
       int: 0
       action: set
    gravassistLevel:
       int: 1
       action: set

# -- Inertial Boost
    popsTarget:
       int: 20
       action: set
    pops:
       int: 0
       action: set
    popsLevel:
       int: 1
       action: set

# Coordinate Locks
    lanesTarget:
       int: 10
       action: set
    lanes:
       int: 0
       action: set
    lanesLevel:
       int: 1
       action: set
# Robots
    dropsTarget:
       int: 10
       action: set
    drops:
       int: 0
       action: set
    dropsLevel:
       int: 1
       action: set

# Gyro
    spinsTarget:
       int: 20
       action: set
    spins:
       int: 0
       action: set
    spinsLevel:
       int: 1
       action: set

  mode_base_started:
    bonustype1:
       int: 0
       action: set
    bonustype2:
       int: 0
       action: set
    bonustype3:
       int: 0
       action: set
    bonustype4:
       int: 0
       action: set
    bonuscount:
       int: 1
       action: set
    bonuscountdisplay:
       int: 0
       action: set
    bonus_multiplier:
       int: 1
       action: set
    bonus_l2:
       int: 0
       action: set
    bonus_l3:
       int: 0
       action: set
    bonus_l4:
       int: 0
       action: set
    bonus_l5:
       int: 0
       action: set
# -- Temporary Playfield Multiplier
    temp_playfield_x:
       int: 1
       action: set
# -- Yellow Target Count
    yellow_hits:
       int: 0
       action: set

# Pop Bumpers
# 250 each -- "Super" Modes may override
  s_jet_upper_left_active:
    score: 250 * current_player.temp_playfield_x * current_player.perm_playfield_x
  s_jet_upper_right_active:
    score: 250 * current_player.temp_playfield_x * current_player.perm_playfield_x
  s_jet_lower_center_active:
    score: 250 * current_player.temp_playfield_x * current_player.perm_playfield_x

# Slings
# 100 + (10 * sling_hits)
  s_slingshot_left_active:
    score: (100 + (10 * current_player.sling_hits)) * current_player.temp_playfield_x * current_player.perm_playfield_x
    sling_hits: 1
  s_slingshot_right_active:
    score: (100 + (10 * current_player.sling_hits)) * current_player.temp_playfield_x * current_player.perm_playfield_x
    sling_hits: 1

# Left and Right Drop Target Banks
# 1000 unlit
# 5000 flashing
# 3000 lit
# Full Bank - 5000 when advancing bonus multiplier
#            10000 when not advancing bonus multiplier
  shotGroupLeftTargets_unlit_hit:
    score: 1000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupLeftTargets_lit_hit:
    score: 3000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupLeftTargets_flashing_hit:
    score: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupRightTargets_unlit_hit:
    score: 1000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupRightTargets_lit_hit:
    score: 3000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupRightTargets_flashing_hit:
    score: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1

# "Lit" Complete
# Getting both awards extra ball, but each one is worth 25,000
  shotGroupLeftTargets_lit_complete:
     score: 25000 * current_player.temp_playfield_x * current_player.perm_playfield_x
     bonuscount: 3
  shotGroupRightTargets_lit_complete:
     score: 25000 * current_player.temp_playfield_x * current_player.perm_playfield_x
     bonuscount: 3

# Full Down -- Regardless of other status
# 5000 here.  5000 more later if we don't increase bonus X
  drop_target_bank_leftfull_down:
    score: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonustype1: 1
    bonuscount: 3
  drop_target_bank_rightfull_down:
    score: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonustype4: 1
    bonuscount: 3

# Yellow Fixed Targets
# 10000 x (hits this ball + 1)
  s_sTargetYellowL_active:
    score: (10000 * (current_player.yellow_hits + 1)) * current_player.temp_playfield_x * current_player.perm_playfield_x
    yellow_hits: 1
    bonuscount: 1
  s_sTargetYellowR_active:
    score: (10000 * (current_player.yellow_hits + 1)) * current_player.temp_playfield_x * current_player.perm_playfield_x
    yellow_hits: 1
    bonuscount: 1

# Spinner
# 100 pts, but modes can override
  s_spinner_active:
    score: 100 * current_player.temp_playfield_x * current_player.perm_playfield_x

# Scoop
# 10000 points
  s_ir_scoop_detect_active:
    score: 10000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1

# Lanes
# 1000 Unlit
# 3000 Lit
  shotGroupToplanes_unlit_hit:
    score: 1000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  shotGroupToplanes_lit_hit:
    score: 3000 * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1

# Lanes Complete
# 5000 base.  5000 more will be awarded if bonus multi is not increased.
  shotGroupToplanes_lit_complete:
    score: 5000  * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonustype2: 1
    bonuscount: 10

# Inlanes
#todo 10000 when opposite lane ball save active
#Else 1000
  s_roInLaneLeft_active:
    score: 1000  * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1
  s_roInLaneRight_active:
    score: 1000  * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonuscount: 1

# Outlanes
#todo Collection High Perf Mode Bonus [Not yet implemented]
#todo If lit ball save
#todo else
# If all else fails, 10000 pts
#  s_roOutLaneLeft_active:
#    score: 10000 * current_player.temp_playfield_x * current_player.perm_playfield_x
#    bonuscount: 1
#  s_roOutLaneRight_active:
#    score: 10000 * current_player.temp_playfield_x * current_player.perm_playfield_x
#    bonuscount: 1

# Other Switches
  s_sTargetDropL_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1
  s_sTargetDropR_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1
  s_sTargetLowL_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1
  s_sTargetLowR_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1
  s_sTargetUpperL_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1
  s_sTargetUpperR_active:
    score: (10 + current_player.other_switches) * current_player.temp_playfield_x * current_player.perm_playfield_x
    other_switches: 1
    bonuscount: 1

# This is the 50 pops + spins bonus for the bonus multiplier
  gravityAssistBonus:
    score: 5000  * current_player.temp_playfield_x * current_player.perm_playfield_x
    bonustype3: 1
    bonuscount: 10

# Decide on bonus multi increase or 5000 extra points
  player_bonustype1{value==1}:
     bonus_multiplier:
        int: 1
     bonus_l2:
        int: 1
  player_bonustype1{value>1}:
     score:
        int: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x

  player_bonustype2{value==1}:
     bonus_multiplier:
        int: 1
     bonus_l3:
        int: 1
  player_bonustype2{value>1}:
     score:
        int: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x

  player_bonustype3{value==1}:
     bonus_multiplier:
        int: 1
     bonus_l4:
        int: 1
  player_bonustype3{value>1}:
     score:
        int: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x

  player_bonustype4{value==1}:
     bonus_multiplier:
        int: 1
     bonus_l5:
        int: 1
  player_bonustype4{value>1}:
     score:
        int: 5000 * current_player.temp_playfield_x * current_player.perm_playfield_x

  bonus_reset_achieved:
     bonustype4:
        int: 0
        action: set
     bonustype1:
        int: 0
        action: set
     bonustype2:
        int: 0
        action: set
     bonustype3:
        int: 0
        action: set

  acheivement_story01_successful:
     status_untitled_mode_1: 1
  acheivement_story02_successful:
     status_untitled_mode_2: 1
  acheivement_story03_successful:
     status_untitled_mode_3: 1
  acheivement_story04_successful:
     status_untitled_mode_4: 1
  acheivement_story05_successful:
     status_untitled_mode_5: 1
  acheivement_story06_successful:
     status_untitled_mode_6: 1
  enableWizardMode:
     status_untitled_mode_7:
       int: 0
       action: set

  story_is_completed_successful:
     perm_playfield_x: 1


